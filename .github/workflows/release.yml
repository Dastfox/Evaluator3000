name: Angular CI Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build --configuration=production

    - name: Setup releases
      run: |
        BUILD_DIR=$(find dist -mindepth 1 -maxdepth 1 -type d)

        # Create server directories
        mkdir -p "$BUILD_DIR/server"

        # Download miniserve for each platform
        curl -L https://github.com/svenstaro/miniserve/releases/download/v0.25.0/miniserve-0.25.0-x86_64-pc-windows-msvc.exe -o "$BUILD_DIR/server/server.exe"
        curl -L https://github.com/svenstaro/miniserve/releases/download/v0.25.0/miniserve-0.25.0-x86_64-apple-darwin -o "$BUILD_DIR/server/server-mac"
        curl -L https://github.com/svenstaro/miniserve/releases/download/v0.25.0/miniserve-0.25.0-x86_64-unknown-linux-gnu -o "$BUILD_DIR/server/server-linux"

        chmod +x "$BUILD_DIR/server/server-mac" "$BUILD_DIR/server/server-linux"

        # Create Windows start.bat - Now serving from current directory
        echo "@echo off
        echo Starting local server...
        echo Opening http://localhost:8000 in your browser
        start http://localhost:8000
        cd .
        server\server.exe . --index index.html --port 8000 -v" > "$BUILD_DIR/start.bat"

        # Create Unix start.sh - Now serving from current directory
        echo '#!/bin/bash

        # Detect OS
        case "$(uname -s)" in
            Darwin*)    SERVER="./server/server-mac" ;;
            Linux*)     SERVER="./server/server-linux" ;;
            *)         echo "Unsupported OS" && exit 1 ;;
        esac

        echo "Starting local server..."

        # Try to open browser based on OS
        case "$(uname -s)" in
            Darwin*)    (sleep 1 && open http://localhost:8000) & ;;
            Linux*)     (sleep 1 && xdg-open http://localhost:8000) & ;;
        esac

        $SERVER . --index index.html --port 8000 -v' > "$BUILD_DIR/start.sh"

        chmod +x "$BUILD_DIR/start.sh"

        # Create README
        echo "To run the application:

        Windows:
        1. Double-click start.bat

        Mac/Linux:
        1. Double-click start.sh
           (If that doesn't work, open terminal and run: ./start.sh)

        The app will open automatically in your browser at http://localhost:8000

        To stop:
        - Windows: Close the black command window
        - Mac/Linux: Press Ctrl+C in the terminal

        Troubleshooting:
        - If you see 404 errors, make sure all files are in the same directory
        - Check the terminal window for any error messages" > "$BUILD_DIR/README.txt"

        # Create platform-specific zips
        cp -r "$BUILD_DIR" windows-build
        cp -r "$BUILD_DIR" mac-build
        cp -r "$BUILD_DIR" linux-build

        # Windows zip
        rm windows-build/server/server-mac windows-build/server/server-linux windows-build/start.sh
        (cd windows-build && zip -r ../release-windows.zip *)

        # Mac zip
        rm mac-build/server/server.exe mac-build/server/server-linux mac-build/start.bat
        (cd mac-build && zip -r ../release-mac.zip *)

        # Linux zip
        rm linux-build/server/server.exe linux-build/server/server-mac linux-build/start.bat
        (cd linux-build && zip -r ../release-linux.zip *)

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-windows.zip
          release-mac.zip
          release-linux.zip
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          Release ${{ github.ref_name }}

          ### Windows
          1. Download and extract release-windows.zip
          2. Double-click start.bat

          ### Mac
          1. Download and extract release-mac.zip
          2. Double-click start.sh
             (If that doesn't work, open terminal and run: ./start.sh)

          ### Linux
          1. Download and extract release-linux.zip
          2. Open terminal in the extracted folder
          3. Run: ./start.sh

          The app will open automatically in your default browser!

          Troubleshooting:
          - Make sure to extract ALL files from the zip
          - Keep all files in the same directory
          - If you see 404 errors, try closing the server and starting again
